name: Publish Dev Container

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    name: Build and push container image
    runs-on: ubuntu-latest
    container:
      image: catthehacker/ubuntu:act-latest
      options: --privileged -v /var/run/docker.sock:/var/run/docker.sock
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Setup Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Install Docker
        uses: docker/setup-buildx-action@v3

      - name: Get GitHub Token for act
        id: get-token
        if: env.ACT == 'true'
        run: |
          if ! command -v gh &> /dev/null; then
            echo "Installing GitHub CLI..."
            type -p curl >/dev/null || (apt update && apt install curl -y)
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
            && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
            && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
            && apt update \
            && apt install gh -y
          fi
          echo "token=$(gh auth token)" >> "$GITHUB_OUTPUT"

      - name: Build and push container
        run: nix run .#pushToGhcr
        env:
          GITHUB_TOKEN: ${{ env.ACT == 'true' && steps.get-token.outputs.token || secrets.GITHUB_TOKEN }}
          # These are needed for act testing
          ACT: true
          DOCKER_HOST: unix:///var/run/docker.sock
