name: Build and Publish Multi-Arch Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
  workflow_dispatch:

jobs:
  build-and-push:
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            nix-system: x86_64-linux
          - arch: arm64
            nix-system: aarch64-linux
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.arch }}
      
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            experimental-features = nix-command flakes
            extra-platforms = aarch64-linux
      
      - name: Setup Cachix
        uses: cachix/cachix-action@v12
        with:
          name: ${{ secrets.CACHIX_CACHE || 'nix-community' }}
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          skipPush: ${{ !secrets.CACHIX_AUTH_TOKEN }}
      
      - name: Build Docker image with Nix
        run: nix build .#dockerConfigurations.devcontainer-${{ matrix.arch }}
        env:
          NIX_CONFIG: "experimental-features = nix-command flakes"
      
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            type=semver,pattern={{version}}-${{ matrix.arch }}
            type=semver,pattern={{major}}.{{minor}}-${{ matrix.arch }}
            type=sha,prefix=sha-,suffix=-${{ matrix.arch }}
            type=ref,event=branch,suffix=-${{ matrix.arch }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Load and tag Docker image
        run: |
          IMAGE_ID=$(docker load < result | awk -F': ' '/Loaded image:/{print $2}')
          echo "IMAGE_ID=${IMAGE_ID}" >> $GITHUB_ENV
          
          # Tag with all the metadata tags
          for tag in ${{ steps.meta.outputs.tags }}; do
            docker tag "${IMAGE_ID}" "$tag"
            echo "Tagged: $tag"
          done
      
      - name: Push Docker image
        if: github.event_name != 'pull_request'
        run: |
          for tag in ${{ steps.meta.outputs.tags }}; do
            docker push "$tag"
            echo "Pushed: $tag"
          done

  create-manifest:
    needs: build-and-push
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Docker metadata for manifest
        id: meta-manifest
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=sha-
            type=ref,event=branch

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifests
        run: |
          for tag in ${{ steps.meta-manifest.outputs.tags }}; do
            # Create and push the manifest list
            docker manifest create $tag \
              $tag-amd64 \
              $tag-arm64
              
            docker manifest push $tag
            echo "Pushed manifest: $tag"
          done